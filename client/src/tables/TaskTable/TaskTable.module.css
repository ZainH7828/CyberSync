.catTableArea {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.smallTd {
  width: 1rem;
}

.catTableArea > .head {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.catTableArea > .head > svg,
.catTableArea > .head > button > svg {
  height: 1rem;
  cursor: pointer;
}

.catTableArea > .head > button {
  border: 0;
  outline: 0;
  padding: 0;
  margin: 0;
  background: transparent;
}

.catTableArea > .head > h3,
.catTableArea > .head > input {
  font-size: 1.375rem;
  font-weight: 600;
  margin: 0;
}

.catTableArea > .head > input {
  background: transparent;
  border: 1px solid #ccc;
  border-radius: 0.25rem;
  outline: 0;
}

.catTableArea table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
}

.catTableArea table.subItemTable {
  max-width: 67.5rem;
}

.catTableArea table tr :is(th, td):first-child {
  border-left: 0.3125rem solid #000;
}
.catTableArea table tr :is(td):first-child {
  border-left: 0.3125rem solid #ffffff;
}

.catTableArea table thead {
  text-align: center;
}

.catTableArea table :is(th, td) {
  vertical-align: middle;
  border: 1px solid #ddd;
  padding: 0.5rem 0.75rem;
  font-weight: 400;
}

.catTableArea table :is(th, td) > * {
  vertical-align: middle;
}

.catTableArea .imgArea {
  display: inline-block;
  cursor: pointer;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  background: #ddd;
}

.catTableArea .imgArea > img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 50%;
}

.addTaskBtn {
  display: flex;
  border: 0;
  padding: 0;
  margin: 0;
  outline: 0;
  background: transparent;
  font-size: 0.875rem;
  align-items: center;
  gap: 0.5rem;
  color: #999;
}

.addTaskBtn > svg {
  height: 0.875rem;
}

.taskDetailTDArea {
  position: relative;
}

.taskDetailTDArea > input {
  background: transparent;
  border-radius: 0.375rem;
  padding: 0.125rem 0.25rem;
  width: 90%;
  max-width: 20rem;
  border: 1px solid transparent;
  outline: 0;
}

.taskDetailTDArea > input:focus,
.taskDetailTDArea > input:hover {
  border-color: #aaa;
}

.openArea {
  background: var(--dashboard-bg);
  position: absolute;
  display: flex;
  top: 0;
  right: 0;
  height: 100%;
  gap: 0.375rem;
  align-items: center;
  cursor: pointer;
  font-size: 0.875rem;
  padding: 0 0 0 0.5rem;
  color: #777;
  transition: all 0.2s;
}

.openArea > svg {
  height: 0.625rem;
}

.ownerImageArea {
  text-align: center;
  width: 9.5rem;
}

.taskDetailTDArea:not(:hover) > .openArea {
  opacity: 0;
  visibility: hidden;
}

.catTableArea table tr :is(th, td).subItemTd {
  padding: 1rem;
  border-width: 1px;
}

.taskDetailTDArea > button {
  text-align: center;
  vertical-align: middle;
  width: 1.375rem;
  height: 1.375rem;
  line-height: 0;
  border: 0;
  padding: 0;
  border-radius: 0.25rem;
  background: transparent;
  margin-right: 0.375rem;
  transition: background 0.2s, opacity 0.2s;
  opacity: 0.2;
}

.taskDetailTDArea > button.active,
.taskDetailTDArea > button.hasItems,
.taskDetailTDArea > button:hover {
  opacity: 1;
}

.taskDetailTDArea > button.hidden {
  opacity: 0;
  pointer-events: none;
}

.taskDetailTDArea > button:hover,
.subItemCount {
  color: var(--text-color);
  background: #dfdfdf;
}

.taskDetailTDArea > button > svg {
  height: 0.75rem;
  transition: all 0.3s;
}

.taskDetailTDArea > button.active > svg {
  transform: rotate(90deg);
}

.subItemCount {
  vertical-align: middle;
  text-align: center;
  display: inline-block;
  width: 1rem;
  height: 1rem;
  line-height: 1rem;
  font-size: 0.625rem;
  font-weight: 600;
  border-radius: 50%;
  margin-left: 0.25rem;
}

.deliverables {
  max-width: 20rem;
  text-align: center;
}

.deliverables > span {
  display: block;
  text-wrap: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 100%;
}

.badgeArea {
  position: absolute;
  top: 50%;
  right: 0.5rem;
  transform: translate(0%, -50%);
  background: var(--primary);
  color: var(--white);
  padding: 0.25rem 0.875rem;
  border-radius: 0.25rem;
  font-size: 0.75rem;
  transition: all 0.3s;
}

.taskDetailTDArea:hover > .badgeArea {
  opacity: 0;
  visibility: hidden;
}



